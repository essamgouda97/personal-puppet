#!/usr/bin/env python3
import os.path
import subprocess
import sys
from typing import NoReturn
from typing import Tuple


PERSONAL_PUPPET = os.path.join(
    os.environ.get('XDG_CACHE_DIR', os.path.expanduser('~/.cache')),
    'personal-puppet',
)
GEM_HOME = os.path.join(PERSONAL_PUPPET, 'gems')
GEM_BIN = os.path.join(GEM_HOME, 'bin')
PUPPET_BIN = os.path.join(GEM_BIN, 'puppet')

HERE = os.path.dirname(os.path.realpath(__file__))
MODULE_PATH = ':'.join(os.path.join(HERE, d) for d in ('modules', 'vendor'))


def _msg(s: str) -> None:
    print('=' * 79)
    print(s)
    print('=' * 79, flush=True)


def main() -> NoReturn:
    if subprocess.call(('ssh-add', '-l'), stdout=subprocess.DEVNULL):
        subprocess.check_call('ssh-add')

    os.environ['GEM_HOME'] = GEM_HOME
    os.environ['PATH'] = GEM_BIN + os.pathsep + os.environ['PATH']

    for exe, version in (('puppet', '>=5,<6'), ('r10k', '>=2,<3')):
        if not os.path.exists(os.path.join(GEM_BIN, exe)):
            _msg('Ensuring {} is installed...'.format(exe))
            cmd: Tuple[str, ...]
            cmd = ('gem', 'install', exe, '-v', version, '--no-document')
            subprocess.check_call(cmd)

    _msg('Installing puppet modules...')
    subprocess.check_call(('r10k', 'puppetfile', 'install'), cwd=HERE)
    subprocess.check_call(('r10k', 'puppetfile', 'purge'), cwd=HERE)

    _msg('Execing puppet')
    cmd = (
        'sudo', 'env',
        'PATH={}'.format(os.environ['PATH']),
        'GEM_HOME={}'.format(os.environ['GEM_HOME']),
        'SSH_AUTH_SOCK={}'.format(os.environ['SSH_AUTH_SOCK']),
        'puppet', 'apply', '-v', '--show_diff',
        '--modulepath', MODULE_PATH,
        '--hiera_config', os.path.join(HERE, 'hiera.yaml'),
        os.path.join(HERE, 'manifests/site.pp'),
        *sys.argv[1:],
    )
    os.execvp(cmd[0], cmd)


if __name__ == '__main__':
    exit(main())
